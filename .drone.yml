kind: pipeline
name: default

workspace:
  base: /go
  path: src/github.com/mickael-kerjean.me/filestash

clone:
  depth: 1


steps:

- name: build_prepare
  image: alpine:latest
  depends_on: [ clone ]
  commands:
  - mkdir -p ./dist/data/
  - cp -R config dist/data/config

- name: build_go
  image: golang:1.12-stretch
  depends_on: [ build_prepare ]
  environment:
    CGO_LDFLAGS_ALLOW: '-fopenmp'
  commands:
  - apt-get update > /dev/null && apt-get install -y libvips-dev libraw-dev > /dev/null
  - find server/plugin/plg_* -type f -name "install.sh" -exec {} \;
  - find server/plugin/plg_* -type f -name '*.a' -exec mv {} /usr/local/lib/ \;
  - go get -t ./server/...
  - make build_backend

- name: build_js
  image: node:8-alpine
  depends_on: [ build_prepare ]
  commands:
  - apk add make git > /dev/null
  - npm install --quiet
  - make build_frontend

- name: build_finalise
  image: debian:latest
  depends_on: [ build_go, build_js ]
  commands:
  - timeout 1 ./dist/filestash || true
  - cp -R dist /tmp/filestash
  - tar -C /tmp/ -zcvf filestash_linux-amd64.tar.gz ./filestash

- name: test_prepare
  image: alpine:latest
  depends_on: [ clone ]
  environment:
    PASSWORD:
      from_secret: GIT_PASSWORD
  commands:
  - apk add git > /dev/null
  - cd ../ && git clone "https://readonly:$PASSWORD@git.kerjean.me/filestash/test.git"
  - chmod -R 777 ./test/
  - chmod -R 777 ./filestash/dist/data

- name: test_go
  image: golang:1.12-alpine
  depends_on: [ test_prepare ]
  commands:
  - apk add git gcc libc-dev poppler-utils > /dev/null
  - cp ../test/assets/* /tmp/
  - go get -t ../test/unit_go/...
  - go test -v --tags "fts5" ../test/unit_go/...

- name: test_js
  image: node:8-alpine
  depends_on: [ test_prepare ]
  commands:
  - cd ../test/unit_js
  - npm install --quiet
  - npm test

- name: test_e2e
  image: machines/puppeteer
  depends_on: [ build_prepare, build_js, build_go ]
  environment:
    ADMIN_PASSWORD: $$2a$$10$$9OFbPZV4lYpYjU5eUi91o.kgeMyCuW11j878YBRri3gBwccq2lSFy
    APP_URL: http://127.0.0.1:8334
    CI: true
  commands:
  - ./dist/filestash &
  - cd ../test/e2e
  - npm install --quiet
  - node servers/webdav.js &
  - npm test

- name: release_artifact
  image: appleboy/drone-scp
  depends_on: [ test_go, test_js, test_e2e ]
  when:
    branch: master
  settings:
    command_timeout: 30m
    host: hal.kerjean.me
    user:
      from_secret: SSH_USERNAME
    password:
      from_secret: SSH_PASSWORD
    source: filestash_linux-amd64.tar.gz
    target: /app/pages/data/projects/filestash/downloads/latest/

# - name: release_docker
#   image: debian:latest
#   depends_on: [ release_artifact ]
#   when:
#     branch: master
#   settings:
#     dockerfile: ./docker/prod/Dockerfile
#     repo: machines/filestash
#     username:
#       from_secret: DOCKER_USERNAME
#     password:
#       from_secret: DOCKER_PASSWORD
#     tags: latest

# - name: deploy
#   image: appleboy/drone-ssh
#   depends_on: [ release_docker ]
#   when:
#     branch: master
#   settings:
#     command_timeout: 10m
#     host: hal.kerjean.me
#     user:
#       from_secret: SSH_USERNAME
#     password:
#       from_secret: SSH_PASSWORD
#     port: 22
#     script:
#     - cd /app/filestash/
#     - docker-compose pull
#     - docker-compose up -d --force-recreate --build
#     - docker image prune -f

# - name: report
#   image: plugins/irc
#   depends_on: [ deploy ]
#   settings:
#     prefix: build
#     nick: blipblip
#     channel: filestash
#     host: chat.freenode.net
#     port: 6667
#     template: >
#       {{#success build.status}}
#         Build success: https://github.com/mickael-kerjean/filestash/commit/{{build.commit}}
#       {{else}}
#         Build failure: er}} https://github.com/mickael-kerjean/filestash/commit/{{build.commit}}
#       {{/success}}